/**
 * almond 0.2.5 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */

var requirejs,require,define;!function(n){function e(n,e){return y.call(n,e)}function r(n,e){var r,i,t,o,u,f,c,l,s,p,a=e&&e.split("/"),d=h.map,g=d&&d["*"]||{};if(n&&"."===n.charAt(0))if(e){for(a=a.slice(0,a.length-1),n=a.concat(n.split("/")),l=0;l<n.length;l+=1)if(p=n[l],"."===p)n.splice(l,1),l-=1;else if(".."===p){if(1===l&&(".."===n[2]||".."===n[0]))break;l>0&&(n.splice(l-1,2),l-=2)}n=n.join("/")}else 0===n.indexOf("./")&&(n=n.substring(2));if((a||g)&&d){for(r=n.split("/"),l=r.length;l>0;l-=1){if(i=r.slice(0,l).join("/"),a)for(s=a.length;s>0;s-=1)if(t=d[a.slice(0,s).join("/")],t&&(t=t[i])){o=t,u=l;break}if(o)break;!f&&g&&g[i]&&(f=g[i],c=l)}!o&&f&&(o=f,u=c),o&&(r.splice(0,u,o),n=r.join("/"))}return n}function i(e,r){return function(){return s.apply(n,x.call(arguments,0).concat([e,r]))}}function t(n){return function(e){return r(e,n)}}function o(n){return function(e){d[n]=e}}function u(r){if(e(g,r)){var i=g[r];delete g[r],m[r]=!0,l.apply(n,i)}if(!e(d,r)&&!e(m,r))throw new Error("No "+r);return d[r]}function f(n){var e,r=n?n.indexOf("!"):-1;return r>-1&&(e=n.substring(0,r),n=n.substring(r+1,n.length)),[e,n]}function c(n){return function(){return h&&h.config&&h.config[n]||{}}}var l,s,p,a,d={},g={},h={},m={},y=Object.prototype.hasOwnProperty,x=[].slice;p=function(n,e){var i,o=f(n),c=o[0];return n=o[1],c&&(c=r(c,e),i=u(c)),c?n=i&&i.normalize?i.normalize(n,t(e)):r(n,e):(n=r(n,e),o=f(n),c=o[0],n=o[1],c&&(i=u(c))),{f:c?c+"!"+n:n,n:n,pr:c,p:i}},a={require:function(n){return i(n)},exports:function(n){var e=d[n];return"undefined"!=typeof e?e:d[n]={}},module:function(n){return{id:n,uri:"",exports:d[n],config:c(n)}}},l=function(r,t,f,c){var l,s,h,y,x,v,b=[];if(c=c||r,"function"==typeof f){for(t=!t.length&&f.length?["require","exports","module"]:t,x=0;x<t.length;x+=1)if(y=p(t[x],c),s=y.f,"require"===s)b[x]=a.require(r);else if("exports"===s)b[x]=a.exports(r),v=!0;else if("module"===s)l=b[x]=a.module(r);else if(e(d,s)||e(g,s)||e(m,s))b[x]=u(s);else{if(!y.p)throw new Error(r+" missing "+s);y.p.load(y.n,i(c,!0),o(s),{}),b[x]=d[s]}h=f.apply(d[r],b),r&&(l&&l.exports!==n&&l.exports!==d[r]?d[r]=l.exports:h===n&&v||(d[r]=h))}else r&&(d[r]=f)},requirejs=require=s=function(e,r,i,t,o){return"string"==typeof e?a[e]?a[e](r):u(p(e,r).f):(e.splice||(h=e,r.splice?(e=r,r=i,i=null):e=n),r=r||function(){},"function"==typeof i&&(i=t,t=o),t?l(n,e,r,i):setTimeout(function(){l(n,e,r,i)},4),s)},s.config=function(n){return h=n,h.deps&&s(h.deps,h.callback),s},define=function(n,r,i){r.splice||(i=r,r=[]),e(d,n)||e(g,n)||(g[n]=[n,r,i])},define.amd={jQuery:!0}}(),define("almond",function(){}),define("cs",{load:function(n,e,r){e([n],function(n){r(n)})}}),define("adder/adder",[],function(){var n;return n=function(){function n(){}return n.prototype.add=function(n,e){return n+e},n}()}),define("app",["cs!adder/adder"],function(n){return console.log("Adding 2 to 3 gets us "+(new n).add(2,3))});